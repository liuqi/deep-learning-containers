FROM ubuntu:20.04

LABEL maintainer="VMware AI"
LABEL dlc_major_version="1"

ARG PYTHON_VERSION=3.8.10
ARG MX_URL=https://repo.mxnet.io/dist/python/cpu/mxnet-1.9.0-py3-none-manylinux2014_x86_64.whl

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib" \
    PYTHONIOENCODING=UTF-8 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    DGLBACKEND=mxnet \
    DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
 && apt-get -y upgrade --only-upgrade systemd \
 && apt-get install -y --no-install-recommends \
    build-essential \
    ca-certificates \
    curl \
    emacs \
    git \
    vim \
    wget \
    unzip \
    libopencv-dev \
    openssh-client \
    openssh-server \
    zlib1g-dev \
    libreadline-gplv2-dev \
    libncursesw5-dev \
    libssl-dev \
    libsqlite3-dev \
    libgdbm-dev \
    libc6-dev \
    libbz2-dev \
    tk-dev \
    libffi-dev \
    cmake \
    libgtk2.0-dev \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# install Python
RUN apt-get update \
 && apt-get install -y python3 python3-pip \
 && rm -rf /usr/bin/python /usr/bin/pip \
 && ln -s /usr/bin/python3 /usr/bin/python \
 && ln -s /usr/bin/pip3 /usr/bin/pip

###########################################################################
# Horovod dependencies
###########################################################################

# Install Open MPI
RUN mkdir /tmp/openmpi \
 && cd /tmp/openmpi \
 && wget -q https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.1.tar.gz \
 && tar zxf openmpi-4.0.1.tar.gz \
 && cd openmpi-4.0.1 \
 && ./configure --enable-orterun-prefix-by-default \
 && make -j $(nproc) all \
 && make install \
 && ldconfig \
 && rm -rf /tmp/openmpi

# Create a wrapper for OpenMPI to allow running as root by default
RUN mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real \
 && echo '#!/bin/bash' > /usr/local/bin/mpirun \
 && echo 'mpirun.real --allow-run-as-root "$@"' >> /usr/local/bin/mpirun \
 && chmod a+x /usr/local/bin/mpirun \
 && echo "hwloc_base_binding_policy = none" >> /usr/local/etc/openmpi-mca-params.conf \
 && echo "rmaps_base_mapping_policy = slot" >> /usr/local/etc/openmpi-mca-params.conf

ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
ENV PATH=/usr/local/bin:$PATH

WORKDIR /

RUN pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org \
 && pip install --no-cache --upgrade \
    h5py==2.10.0 \
    onnx==1.8.1 \
    "numpy<1.20" \
    pandas==1.3.0 \
    "Pillow>=9.0,<10.0" \
    "requests<3" \
    scikit-learn \
    # disabling DGL until a release is built for MXNet 1.9
    # dgl==0.6.* \
    scipy==1.7.0 \
    gluonnlp==0.10.0 \
    gluoncv==0.8.0 \
    # Putting a cap in versions number to avoid potential issues with a new major version
    "urllib3<2" \
    python-dateutil==2.8.0 \
    tqdm==4.39.0 \
    "PyYAML>=5.4,<5.5" \
    mpi4py==3.0.3 \
    ${MX_URL} \
    opencv-python

# Install Horovod
RUN pip install --no-cache-dir horovod

# Allow OpenSSH to talk to containers without asking for confirmation
RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new \
 && echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new \
 && mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config

# OpenSHH config for MPI communication
RUN mkdir -p /var/run/sshd && \
  sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

RUN rm -rf /root/.ssh/ && \
  mkdir -p /root/.ssh/ && \
  ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa && \
  cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys \
  && printf "Host *\n StrictHostKeyChecking no\n" >> /root/.ssh/config

# This is here to make our installed version of OpenCV work.
# https://stackoverflow.com/questions/29274638/opencv-libdc1394-error-failed-to-initialize-libdc1394
# TODO: Should we be installing OpenCV in our image like this? Is there another way we can fix this?
RUN ln -s /dev/null /dev/raw1394

CMD ["/bin/bash"]